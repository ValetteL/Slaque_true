security:
    encoders:
        App\Entity\User:
            algorithm: 'argon2i'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            logout_on_user_change: true
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                login_path: user_login
                check_path: user_login
                #pour protéger le formulaire de login contre les att. CSRF
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: user_logout
            # https://symfony.com/doc/current/security/form_login_setup.html
            remember_me:
                # recupère la valeur de la variable APP_SECRET du fichier .env
                secret: '%env(string:APP_SECRET)%'
                lifetime: 60480000 #100 week in seconds
                path: /

    # les admins ont tous les pouvoirs des "user"
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/messages/$, roles: ROLE_USER }
